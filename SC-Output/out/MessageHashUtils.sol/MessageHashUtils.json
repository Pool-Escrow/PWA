{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae6fbee1ca342f96827370bc7c938f83f91cd2b648801fec6caf32bf5a33a20b64736f6c63430008180033","sourceMap":"521:3235:40:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3235:40;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae6fbee1ca342f96827370bc7c938f83f91cd2b648801fec6caf32bf5a33a20b64736f6c63430008180033","sourceMap":"521:3235:40:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435","urls":["bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c","dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol","id":48388,"exportedSymbols":{"MessageHashUtils":[48387],"Strings":[47738]},"nodeType":"SourceUnit","src":"123:3634:40","nodes":[{"id":48315,"nodeType":"PragmaDirective","src":"123:24:40","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":48317,"nodeType":"ImportDirective","src":"149:39:40","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":48388,"sourceUnit":47739,"symbolAliases":[{"foreign":{"id":48316,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47738,"src":"157:7:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":48387,"nodeType":"ContractDefinition","src":"521:3235:40","nodes":[{"id":48328,"nodeType":"FunctionDefinition","src":"1222:460:40","nodes":[],"body":{"id":48327,"nodeType":"Block","src":"1314:368:40","nodes":[],"statements":[{"AST":{"nativeSrc":"1376:300:40","nodeType":"YulBlock","src":"1376:300:40","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:40","nodeType":"YulLiteral","src":"1397:4:40","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:40","nodeType":"YulLiteral","src":"1403:34:40","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:40","nodeType":"YulIdentifier","src":"1390:6:40"},"nativeSrc":"1390:48:40","nodeType":"YulFunctionCall","src":"1390:48:40"},"nativeSrc":"1390:48:40","nodeType":"YulExpressionStatement","src":"1390:48:40"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:40","nodeType":"YulLiteral","src":"1499:4:40","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:40","nodeType":"YulIdentifier","src":"1505:11:40"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:40","nodeType":"YulIdentifier","src":"1492:6:40"},"nativeSrc":"1492:25:40","nodeType":"YulFunctionCall","src":"1492:25:40"},"nativeSrc":"1492:25:40","nodeType":"YulExpressionStatement","src":"1492:25:40"},{"nativeSrc":"1571:31:40","nodeType":"YulAssignment","src":"1571:31:40","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:40","nodeType":"YulLiteral","src":"1591:4:40","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:40","nodeType":"YulLiteral","src":"1597:4:40","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:40","nodeType":"YulIdentifier","src":"1581:9:40"},"nativeSrc":"1581:21:40","nodeType":"YulFunctionCall","src":"1581:21:40"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:40","nodeType":"YulIdentifier","src":"1571:6:40"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":48324,"isOffset":false,"isSlot":false,"src":"1571:6:40","valueSize":1},{"declaration":48321,"isOffset":false,"isSlot":false,"src":"1505:11:40","valueSize":1}],"id":48326,"nodeType":"InlineAssembly","src":"1367:309:40"}]},"documentation":{"id":48319,"nodeType":"StructuredDocumentation","src":"552:665:40","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:40","parameters":{"id":48322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48321,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:40","nodeType":"VariableDeclaration","scope":48328,"src":"1254:19:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:40"},"returnParameters":{"id":48325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48324,"mutability":"mutable","name":"digest","nameLocation":"1306:6:40","nodeType":"VariableDeclaration","scope":48328,"src":"1298:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:40"},"scope":48387,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":48354,"nodeType":"FunctionDefinition","src":"2148:229:40","nodes":[],"body":{"id":48353,"nodeType":"Block","src":"2234:143:40","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":48340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":48345,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48331,"src":"2343:7:40","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":48346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:40","memberName":"length","nodeType":"MemberAccess","src":"2343:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":48343,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47738,"src":"2326:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$47738_$","typeString":"type(library Strings)"}},"id":48344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:40","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":47551,"src":"2326:16:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":48347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":48342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:40","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":48341,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:40","typeDescriptions":{}}},"id":48348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":48349,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48331,"src":"2361:7:40","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":48338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:40","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":48337,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:40","typeDescriptions":{}}},"id":48339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:40","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:40","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":48350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":48336,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:40","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":48351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":48335,"id":48352,"nodeType":"Return","src":"2244:126:40"}]},"documentation":{"id":48329,"nodeType":"StructuredDocumentation","src":"1688:455:40","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:40","parameters":{"id":48332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48331,"mutability":"mutable","name":"message","nameLocation":"2193:7:40","nodeType":"VariableDeclaration","scope":48354,"src":"2180:20:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":48330,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:40"},"returnParameters":{"id":48335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48354,"src":"2225:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:40"},"scope":48387,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":48374,"nodeType":"FunctionDefinition","src":"2720:191:40","nodes":[],"body":{"id":48373,"nodeType":"Block","src":"2831:80:40","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":48367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":48368,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48357,"src":"2887:9:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":48369,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48359,"src":"2898:4:40","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":48365,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:40","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":48366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:40","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:40","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":48370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":48364,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:40","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":48371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":48363,"id":48372,"nodeType":"Return","src":"2841:63:40"}]},"documentation":{"id":48355,"nodeType":"StructuredDocumentation","src":"2383:332:40","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:40","parameters":{"id":48360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48357,"mutability":"mutable","name":"validator","nameLocation":"2769:9:40","nodeType":"VariableDeclaration","scope":48374,"src":"2761:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48356,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48359,"mutability":"mutable","name":"data","nameLocation":"2793:4:40","nodeType":"VariableDeclaration","scope":48374,"src":"2780:17:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":48358,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:40"},"returnParameters":{"id":48363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":48374,"src":"2822:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:40"},"scope":48387,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":48386,"nodeType":"FunctionDefinition","src":"3353:401:40","nodes":[],"body":{"id":48385,"nodeType":"Block","src":"3462:292:40","nodes":[],"statements":[{"AST":{"nativeSrc":"3524:224:40","nodeType":"YulBlock","src":"3524:224:40","statements":[{"nativeSrc":"3538:22:40","nodeType":"YulVariableDeclaration","src":"3538:22:40","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:40","nodeType":"YulLiteral","src":"3555:4:40","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:40","nodeType":"YulIdentifier","src":"3549:5:40"},"nativeSrc":"3549:11:40","nodeType":"YulFunctionCall","src":"3549:11:40"},"variables":[{"name":"ptr","nativeSrc":"3542:3:40","nodeType":"YulTypedName","src":"3542:3:40","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:40","nodeType":"YulIdentifier","src":"3580:3:40"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:40","nodeType":"YulLiteral","src":"3585:10:40","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:40","nodeType":"YulIdentifier","src":"3573:6:40"},"nativeSrc":"3573:23:40","nodeType":"YulFunctionCall","src":"3573:23:40"},"nativeSrc":"3573:23:40","nodeType":"YulExpressionStatement","src":"3573:23:40"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:40","nodeType":"YulIdentifier","src":"3620:3:40"},{"kind":"number","nativeSrc":"3625:4:40","nodeType":"YulLiteral","src":"3625:4:40","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:40","nodeType":"YulIdentifier","src":"3616:3:40"},"nativeSrc":"3616:14:40","nodeType":"YulFunctionCall","src":"3616:14:40"},{"name":"domainSeparator","nativeSrc":"3632:15:40","nodeType":"YulIdentifier","src":"3632:15:40"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:40","nodeType":"YulIdentifier","src":"3609:6:40"},"nativeSrc":"3609:39:40","nodeType":"YulFunctionCall","src":"3609:39:40"},"nativeSrc":"3609:39:40","nodeType":"YulExpressionStatement","src":"3609:39:40"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:40","nodeType":"YulIdentifier","src":"3672:3:40"},{"kind":"number","nativeSrc":"3677:4:40","nodeType":"YulLiteral","src":"3677:4:40","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:40","nodeType":"YulIdentifier","src":"3668:3:40"},"nativeSrc":"3668:14:40","nodeType":"YulFunctionCall","src":"3668:14:40"},{"name":"structHash","nativeSrc":"3684:10:40","nodeType":"YulIdentifier","src":"3684:10:40"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:40","nodeType":"YulIdentifier","src":"3661:6:40"},"nativeSrc":"3661:34:40","nodeType":"YulFunctionCall","src":"3661:34:40"},"nativeSrc":"3661:34:40","nodeType":"YulExpressionStatement","src":"3661:34:40"},{"nativeSrc":"3708:30:40","nodeType":"YulAssignment","src":"3708:30:40","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:40","nodeType":"YulIdentifier","src":"3728:3:40"},{"kind":"number","nativeSrc":"3733:4:40","nodeType":"YulLiteral","src":"3733:4:40","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:40","nodeType":"YulIdentifier","src":"3718:9:40"},"nativeSrc":"3718:20:40","nodeType":"YulFunctionCall","src":"3718:20:40"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:40","nodeType":"YulIdentifier","src":"3708:6:40"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":48382,"isOffset":false,"isSlot":false,"src":"3708:6:40","valueSize":1},{"declaration":48377,"isOffset":false,"isSlot":false,"src":"3632:15:40","valueSize":1},{"declaration":48379,"isOffset":false,"isSlot":false,"src":"3684:10:40","valueSize":1}],"id":48384,"nodeType":"InlineAssembly","src":"3515:233:40"}]},"documentation":{"id":48375,"nodeType":"StructuredDocumentation","src":"2917:431:40","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:40","parameters":{"id":48380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48377,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:40","nodeType":"VariableDeclaration","scope":48386,"src":"3378:23:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":48379,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:40","nodeType":"VariableDeclaration","scope":48386,"src":"3403:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:40"},"returnParameters":{"id":48383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48382,"mutability":"mutable","name":"digest","nameLocation":"3454:6:40","nodeType":"VariableDeclaration","scope":48386,"src":"3446:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:40"},"scope":48387,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":48318,"nodeType":"StructuredDocumentation","src":"190:330:40","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[48387],"name":"MessageHashUtils","nameLocation":"529:16:40","scope":48388,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":40}